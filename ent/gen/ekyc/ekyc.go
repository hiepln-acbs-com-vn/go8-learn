// Code generated by ent, DO NOT EDIT.

package ekyc

const (
	// Label holds the string label denoting the ekyc type in the database.
	Label = "ekyc"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldEkycName holds the string denoting the ekyc_name field in the database.
	FieldEkycName = "ekyc_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeAccounts holds the string denoting the accounts edge name in mutations.
	EdgeAccounts = "accounts"
	// Table holds the table name of the ekyc in the database.
	Table = "ekycs"
	// AccountsTable is the table that holds the accounts relation/edge. The primary key declared below.
	AccountsTable = "ekyc_accounts"
	// AccountsInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	AccountsInverseTable = "accounts"
)

// Columns holds all SQL columns for ekyc fields.
var Columns = []string{
	FieldID,
	FieldEkycName,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

var (
	// AccountsPrimaryKey and AccountsColumn2 are the table columns denoting the
	// primary key for the accounts relation (M2M).
	AccountsPrimaryKey = []string{"ekyc_id", "account_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
