// Code generated by ent, DO NOT EDIT.

package account

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAccountName holds the string denoting the account_name field in the database.
	FieldAccountName = "account_name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// EdgeEkycs holds the string denoting the ekycs edge name in mutations.
	EdgeEkycs = "ekycs"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// EkycsTable is the table that holds the ekycs relation/edge. The primary key declared below.
	EkycsTable = "ekyc_accounts"
	// EkycsInverseTable is the table name for the Ekyc entity.
	// It exists in this package in order to avoid circular dependency with the "ekyc" package.
	EkycsInverseTable = "ekycs"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldAccountName,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

var (
	// EkycsPrimaryKey and EkycsColumn2 are the table columns denoting the
	// primary key for the ekycs relation (M2M).
	EkycsPrimaryKey = []string{"ekyc_id", "account_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
